{"version":3,"sources":["components/Layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","style","headerStyle","Link","linkStyle","to","background","color","textAlign","padding","textDecoration","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","borderBottom","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","AddTodo","state","e","setState","defineProperty","target","name","onSubmit","preventDefault","addTodo","display","placeholder","flex","className","About","Fragment","App","Axios","delete","then","toConsumableArray","filter","post","res","data","_this2","get","_this3","BrowserRouter","Route","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b419ccb7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Header() {\n  return (\n    <header style={headerStyle}>\n      <h1>TodoList</h1>\n      <Link style={linkStyle} to=\"/\">\n        Home\n      </Link>{\" \"}\n      |\n      <Link style={linkStyle} to=\"/about\">\n        {\" \"}\n        About\n      </Link>\n    </header>\n  );\n}\n\nconst headerStyle = {\n  background: \"#333\",\n  color: \"#fff\",\n  textAlign: \"center\",\n  padding: \"10px\"\n};\n\nconst linkStyle = {\n  color: \"#fff\",\n  textDecoration: \"none\"\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background: \"#f4f4f4\",\n      padding: \"10px\",\n      borderBottom: \"1px #ccc dotted\",\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\n    };\n  };\n\n  render() {\n    const { id, title } = this.props.todo;\n\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input\n            type=\"checkbox\"\n            onChange={this.props.markComplete.bind(this, id)}\n          />{\" \"}\n          {title}\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>\n            x\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\n//Prop types\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\n\nconst btnStyle = {\n  background: \"#ff0000\",\n  color: \"#fff\",\n  border: \"none\",\n  padding: \"5px 9px\",\n  borderRadius: \"50%\",\n  cursor: \"pointer\",\n  float: \"right\"\n};\n\nexport default TodoItem;\n","import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport PropTypes from \"prop-types\";\n\nclass Todos extends Component {\n  render() {\n    return this.props.todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        markComplete={this.props.markComplete}\n        delTodo={this.props.delTodo}\n      />\n    ));\n  }\n}\n\n//Prop types\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n};\n\nexport default Todos;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class AddTodo extends Component {\n  state = {\n    title: \"\"\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: \"flex\" }}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          id=\"\"\n          placeholder=\"Add Todo...\"\n          style={{ flex: \"10\", padding: \"5px\" }}\n          value={this.state.title}\n          onChange={this.onChange}\n        />\n        <input\n          type=\"submit\"\n          value=\"Submit\"\n          className=\"btn\"\n          style={{ flex: \"1\" }}\n        />\n      </form>\n    );\n  }\n}\n\n//Prop types\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired\n};\n\nexport default AddTodo;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <React.Fragment>\n      <h1>About</h1>\n      <p>\n        This is the TodoList app v1.0.0. It is a part of a React Crash Course\n      </p>\n    </React.Fragment>\n  );\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Layout/Header\";\nimport Todos from \"./components/Todos\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\nimport uuid from \"uuid\";\nimport Axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    Axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\").then(\n      res => this.setState({ todos: res.data })\n    );\n  }\n\n  //toggle complete\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  //Delete Todo\n  delTodo = id => {\n    Axios.delete(\"https://jsonplaceholder.typicode.com/todos/${id}\").then(\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })\n    );\n  };\n\n  //Add todo\n  addTodo = title => {\n    Axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n      title,\n      completed: false\n    }).then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}